@import "normalize.css";
@import "emoji-mart.css";
@import "devices.css";

@font-face {
    font-family: 'Gameplay';
    font-style: normal;
    font-weight: 400;
    src: url(Comfortaa-Bold.ttf) format('truetype');
}

* {
    user-select: none;
}

html, body {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 0;
    margin: 0;
    border: 0;
}

body {
    font-family: Gameplay, sans-serif;
}

body.game {
    position: static;
    margin: 0;
    flex-direction: column;
    justify-content: flex-start;
    align-items: stretch;
}

body.docs {
    margin: 2em;
}

#app {
    position: absolute;
    display: flex;
    flex-direction: column;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 0.125em;
    margin: 0;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
}

.program {
    flex-grow: 1;
    flex-shrink: 1;
    overflow: scroll;
}

header {
    display: flex;
    flex-direction: row;
    flex-grow: 0;
    flex-shrink: 0;
    border-bottom: #DDDDDD 1px solid;
    padding-bottom: 0.25em;
    margin-bottom: 0.25em;
    font-size: 75%;
}

header .score {
    margin-left: 0.5em;
    flex-grow: 1;
    flex-shrink: 0;
}

header .edit-controls {
    flex-grow: 0;
    flex-shrink: 0;
    align-self: flex-end;
    text-align: right;
}

header .control-group {
    margin-left: 0.25em;
}

header .undo {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
}

header .redo {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
}

.controls {
    display: flex;
    flex-direction: column;
    flex-grow: 0;
    flex-shrink: 0;
    align-content: stretch;
    border-top: #DDDDDD 1px solid;
    padding-top: 0.1em;
}

.stacks {
    padding: 0.125em;
    flex-grow: 1;
    flex-shrink: 1;
}

.stacks .card {
    border: 0 solid;
    border-bottom-width: 0.1em;
    line-height: 100%;
}

.stackrow {
    display: flex;
    flex: initial;
    flex-direction: row;
    justify-content: flex-start;
    align-content: flex-start;
    align-items: flex-start;
}

button {
    border-radius: 0.25em;
    border-width: 0.1em;
    font-size: 65%;
    font-family: inherit;
    min-width: 4.5em;
    min-height: 2em;
    background-color: #CCCCCC;
    color: black;
}

button[disabled] {
    color: #AAAAAA;
}

.cardrow, .cardblock {
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: flex-start;
    align-content: flex-start;
}

.cardrows {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-content: stretch;
}

.cardrow {
    display: flex;
    flex-wrap: nowrap;
}

.cardblock {
    display: inline-flex;
}

.cardrow {
    flex-wrap: nowrap;
}

.card, .cursor {
    display: inline-flex;
    position: relative;
    flex: initial;
    width: 1.5em;
    height: 1.5em;
    color: #111111;
    border-radius: 0.25em;
    margin: 0.125em;
    text-align: center;
    overflow: hidden;
    font-family: inherit;
    font-size: inherit;
    cursor: default;

    flex-direction: column;
    justify-content: center;
    align-content: center;
    align-items: center;
    flex-shrink: 0;
    flex-grow: 0;
}

.card img {
    display: block;
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0.1em;
    border: 0;
    flex-shrink: 1;
    flex-grow: 1;
    pointer-events: none;
}

.card {
    box-shadow: 1px 1px 6px rgba(0, 0, 0, 0.8);
}

.card.control {
    background-color: #AAAAFF;
    border-color: #6666CC;
}

.card.action {
    background-color: #FFFFAA;
    border-color: #CCCC66;
}

.dragging {
    position: fixed;
    z-index: 1;
    opacity: 0.9;
    pointer-events: none;
}

.dragging .card {
    display: flex;
    animation-name: slip;
    animation-direction: normal;
    animation-duration: 0.125s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    transform-origin: 50% 50%;
}

.dragging .cursor {
    display: none;
}

.dragging.rejected .card {
    animation-name: slip-away;
}

.dragging.accepted .card {
    animation-name: slip;
    animation-direction: reverse;
    animation-duration: 0.125s;
    animation-iteration-count: 1;
    animation-fill-mode: backwards;
    transform-origin: 50% 50%;
}

.program .draggable.dragged {
    opacity: 0.1;
}

.cursor {
    border: 0.05em dotted rgba(0, 0, 0, 0.4);
    box-shadow: none;
    background-color: transparent;
}

.cursor.required {
    animation-name: pulse;
    animation-direction: normal;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    transform-origin: 50% 50%;
}

.tip {
    display: inline-flex;
    align-self: center;
    flex-wrap: nowrap;
    font-size: 75%;
    color: #444444;
    flex-shrink: 1;
}

.tip:before {
    content: "\1F448"; /* hand pointing left */
    padding-right: 0.25em;
    align-self: center;
}

.dialog-underlay {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.5);
}

div[role="dialog"] {
    position: absolute;
    display: flex;
    width: auto;
    left: 50%;
    top: 2em;
    transform: translate(-50%, 0);
    max-width: calc(100% - 2em);
    max-height: calc(100% - 4em);
    margin: 1em;
    padding: 1em;
    box-sizing: border-box;
    border-radius: 0.5em;
    background: white;
    flex-direction: column;
    flex-wrap: nowrap;
}

.dialog-tabs {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
}

ul[role="tablist"] {
    display: block;
    position: relative;
    list-style: none;
    padding: 0;
    margin: 0;
    flex: 0 0 auto;
    overflow: visible;
}

ul[role="tablist"] li[role="tab"] {
    list-style: none;
    display: inline-block;
    padding: 0.25em;
    margin: 0 0.25em 0 0;
}

ul[role="tablist"] li[role="tab"][aria-selected="true"] {
    color: black;
    border-bottom: 0.125em solid darkorange;
}

ul[role="tablist"] li[role="tab"][aria-selected="false"] {
    color: #AAAAAA;
}

.tab-panels {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    flex: 1 1 auto;
    overflow: hidden;
}

.config-panel {
    display: flex;
    flex-direction: column;
    flex: 1 1 auto;
}

.config-actions-panel .config-items button {
    min-width: 2em;
}

label span + input {
    margin-left: 0.25em;
}

label input + span {
    margin-left: 0.25em;
}

div[role="radio"] {
    margin: 0.25em;
    border-radius: 0.25em;
}

div[role="radio"]::before {
    display: inline-block;
    width: 1.5em;
}

div[role="radio"][aria-disabled="true"] {
    color: #AAAAAA;
}

div[role="radio"][aria-disabled="true"]::before {
    opacity: 0.5;
}

div[role="radio"][aria-checked="false"]::before {
    content: "\26AA"; /* âšª */
}

div[role="radio"][aria-checked="true"]::before {
    content: "\1F518"; /* ðŸ”˜ */
}

input, input[type="text"] {
    border-top: none;
    border-left: none;
    border-right: none;
    border-bottom: solid #AAAAAA 1px;
}

.config-items {
    display: block;
    flex: 1 1 auto;
    overflow-x: hidden;
    overflow-y: scroll;
    align-self: stretch;
    margin-bottom: 1em;
    margin-top: 1em;
}

.button-bar {
    display: flex;
    flex-direction: row;
    flex: 0 0 auto;
    align-self: stretch;
    justify-content: center;
    flex-wrap: nowrap;
}

.button-bar button:not(:first-child) {
    margin-left: 0.75em;
}

.speech-preview {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-self: stretch;
    align-content: stretch;
    align-items: center;
    text-wrap: none;
}

.speech-preview *:not(:first-child) {
    margin-left: 0.75em;
}

@keyframes slip {
    to {
        transform: scale(1.1) rotate(-6deg);
    }
}

@keyframes slip-away {
    from {
        transform: scale(1.1) rotate(-6deg);
        opacity: 0.9;
    }
    to {
        transform: scale(1.5) rotate(-6deg);
        opacity: 0;
    }
}

@keyframes jiggle {
    0% {
        transform: rotate(0deg);
    }
    25% {
        transform: rotate(6deg);
    }
    50% {
        transform: rotate(0deg);
    }
    75% {
        transform: rotate(-6deg);
    }
    100% {
        transform: rotate(0deg);
    }
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    60% {
        transform: scale(1);
    }
    70% {
        transform: scale(1.05);
    }
    80% {
        transform: scale(1);
    }
    90% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
}
