buildscript {
    ext.kotlin_version = '1.2.10'
    ext.kotlin_react_version = '16.2.0-pre.15-kotlin-1.2.0'

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}

subprojects {
    group 'com.natpryce.robots'
    version '1.0-SNAPSHOT'

    repositories {
        mavenCentral()
        maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
        maven { url "http://dl.bintray.com/kotlin/kotlinx.html" }
    }
}

configure(project(':common')) {
    apply plugin: 'kotlin-platform-common'

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-common:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    }
}

configure(project(':webui')) {
    apply plugin: 'kotlin-platform-js'
    apply plugin: 'kotlin-dce-js'
    apply plugin: 'com.moowork.node'

    ext.webDir = "${buildDir}/web"

    compileKotlin2Js {
        kotlinOptions.moduleKind = "commonjs"
        kotlinOptions.sourceMap = true
        kotlinOptions.sourceMapEmbedSources = "always"
    }

    dependencies {
        expectedBy project(':common')

        compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
        compile "org.jetbrains:kotlin-react:$kotlin_react_version"
        compile "org.jetbrains:kotlin-react-dom:$kotlin_react_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    }

    node {
        download = true
    }

    task assembleStaticAssets(type: Sync) {
        from 'src/main/web'
        from 'node_modules/emoji-mart/css'
        into webDir
        preserve {
            // Don't copy robots.js into the output folder because webpack will generate the final version
            include 'robots.js'
        }
    }

    task assembleJsBundle(type: NpmTask, dependsOn: [npmInstall, runDceKotlinJs]) {
        args = ["run", "bundle"]
    }

    assemble.dependsOn assembleStaticAssets
    assemble.dependsOn assembleJsBundle
}

configure(project(':jvm')) {
    apply plugin: 'kotlin-platform-jvm'

    compileKotlin.kotlinOptions.jvmTarget = "1.8"
    compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

    dependencies {
        expectedBy project(':common')

        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        compile 'org.javafp:parsecj:0.5'
        compile 'com.natpryce:result4k:1.4.1'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
        testCompile group: 'com.natpryce', name: 'hamkrest', version: '1.4.2.2'
    }
}

